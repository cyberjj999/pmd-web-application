@model PMDWebApplication.DB.DualDatabaseTestSchemeTest


@{

        ViewBag.Title = "Create";
        Layout = "~/Views/Shared/_AdminLayoutPage.cshtml";

}
    <div class="container">
        <h2>Create A New Test</h2>


        @*
        @using (Html.BeginForm("CreateTestObject", "DualDatabaseTestSchemeTests"))
        {
        <fieldset>

            <input type="text" name="Name" value="Blank" /> Name <br />
            <input type="text" name="Description" value="Blank" /> Desription<br />
            <input type="text" name="Genre" value="Blank" /> Genre<br />
            <input type="checkbox" name="Public" value="True" /> Public<br />


            <br />
            <input type="submit" value="Submit a New Test" />
            <br />

        </fieldset>

        }
        *@


        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Genre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Genre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Genre, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.GroupingId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GroupingId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Genre, "", new { @class = "text-danger" })
            </div>
        </div>*@

        @*<div class="form-group">
            @Html.Label("Status", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox" name ="Public" value="False">
                    @Html.EditorFor(model => model.Status)
                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>*@

        <div class="form-group col-md-12">
            <div class="col-md-2">

            </div>
            <div class="col-md-10">
                <input checked="checked" type="checkbox" name="Public" value="True" /> Status<br />
                <input name="Public" type="hidden" value="false" />
            </div>
        </div>

        <br /><br />

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-outline-success" />
            </div>
        </div>
    </div>
        }




        <div>
            @Html.ActionLink("Back to List", "PersonalProfile")
        </div>

    </div>